{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/reselect/es/index.js","redux/userSelectors.js","common/components/Users/style.module.css","common/Pagination/style.module.css","common/Pagination/Paginator.jsx","common/components/Users/User.jsx","common/components/Users/Users.jsx","common/components/Users/UsersContainer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","getDependencies","funcs","dependencies","every","dep","dependencyTypes","map","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getUserId","state","auth","id","getIsAuth","isAuth","getStatus","profile","status","getIsFetching","users","isFetching","getProfileData","profileData","getTotalCount","totalCount","getCurrentPage","currentPage","getPageSize","pageSize","getFollowingInProgress","followingInProgress","getUsers","filter","u","module","exports","Pagination","props","onActiveClick","portionSize","totalPages","Math","ceil","pageLimitArray","useState","currentPagePortion","setCurrentPagePortion","leftPortionCurrentPage","rightPortionCurrentPage","portionCount","className","classes","paginationContainer","onClick","paginContent","p","item","key","active","User","userContaienr","to","avatar","src","photos","small","userPhoto","alt","description","name","message","btnContainer","followed","disabled","some","btn","unfollow","unfollowAsyncAC","follow","followAsyncAC","Users","toggleFollowingInProgress","btnShowMoreContaoner","UserContainer","setCurrentPage","getUsersAsncAC","this","Preloader","React","Component","connect"],"mappings":"sJAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,iCILtG,SAASC,EAAqBC,EAAGC,GAC/B,OAAOD,IAAMC,EAGf,SAASC,EAA2BC,EAAeC,EAAMb,GACvD,GAAa,OAATa,GAA0B,OAATb,GAAiBa,EAAKT,SAAWJ,EAAKI,OACzD,OAAO,EAKT,IADA,IAAIA,EAASS,EAAKT,OACTjB,EAAI,EAAGA,EAAIiB,EAAQjB,IAC1B,IAAKyB,EAAcC,EAAK1B,GAAIa,EAAKb,IAC/B,OAAO,EAIX,OAAO,EAoBT,SAAS2B,EAAgBC,GACvB,IAAIC,EAAe5B,MAAMC,QAAQ0B,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaC,OAAM,SAAUC,GAChC,MAAsB,oBAARA,KACZ,CACF,IAAIC,EAAkBH,EAAaI,KAAI,SAAUF,GAC/C,cAAcA,KACbG,KAAK,MACR,MAAM,IAAIC,MAAM,wGAAgHH,EAAkB,KAGpJ,OAAOH,E,oVAiDF,IAAIO,EA9CJ,SAA+BC,GACpC,IAAK,IAAIC,EAAOC,UAAUtB,OAAQuB,EAAiBvC,MAAMqC,EAAO,EAAIA,EAAO,EAAI,GAAIG,EAAO,EAAGA,EAAOH,EAAMG,IACxGD,EAAeC,EAAO,GAAKF,UAAUE,GAGvC,OAAO,WACL,IAAK,IAAIC,EAAQH,UAAUtB,OAAQW,EAAQ3B,MAAMyC,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACjFf,EAAMe,GAASJ,UAAUI,GAG3B,IAAIC,EAAiB,EACjBC,EAAajB,EAAMkB,MACnBjB,EAAeF,EAAgBC,GAE/BmB,EAAqBV,EAAQW,WAAMtC,EAAW,CAAC,WAGjD,OAFAkC,IAEOC,EAAWG,MAAM,KAAMT,aAC7BU,OAAOT,IAGNU,EAAWb,GAAQ,WAIrB,IAHA,IAAIc,EAAS,GACTlC,EAASY,EAAaZ,OAEjBjB,EAAI,EAAGA,EAAIiB,EAAQjB,IAE1BmD,EAAOpC,KAAKc,EAAa7B,GAAGgD,MAAM,KAAMT,YAI1C,OAAOQ,EAAmBC,MAAM,KAAMG,MAWxC,OARAD,EAASL,WAAaA,EACtBK,EAASrB,aAAeA,EACxBqB,EAASN,eAAiB,WACxB,OAAOA,GAETM,EAASE,oBAAsB,WAC7B,OAAOR,EAAiB,GAEnBM,GAIiBG,EA9ErB,SAAwBC,GAC7B,IAAI7B,EAAgBc,UAAUtB,OAAS,QAAsBP,IAAjB6B,UAAU,GAAmBA,UAAU,GAAKlB,EAEpFkC,EAAW,KACXC,EAAa,KAEjB,OAAO,WAOL,OANKhC,EAA2BC,EAAe8B,EAAUhB,aAEvDiB,EAAaF,EAAKN,MAAM,KAAMT,YAGhCgB,EAAWhB,UACJiB,MC1BJ,IAAMC,EAAY,SAAAC,GACrB,OAAOA,EAAMC,KAAKC,IAETC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,KAAKG,QAChCC,EAAY,SAAAL,GAAK,OAAIA,EAAMM,QAAQC,QACnCC,EAAgB,SAAAR,GAAK,OAAIA,EAAMS,MAAMC,YACrCC,EAAiB,SAAAX,GAAK,OAAIA,EAAMM,QAAQM,aAcxCC,EAAgB,SAAAb,GAAK,OAAIA,EAAMS,MAAMK,YACrCC,EAAiB,SAAAf,GAAK,OAAIA,EAAMS,MAAMO,aACtCC,EAAc,SAAAjB,GAAK,OAAIA,EAAMS,MAAMS,UACnCC,EAAyB,SAAAnB,GAAK,OAAIA,EAAMS,MAAMW,qBAO9CC,EAAW3C,GAFC,SAAAsB,GAAK,OAAIA,EAAMS,MAAMA,SAEW,SAACA,GACtD,OAAOA,EAAMa,QAAO,SAAAC,GAAC,OAAI,S,oBCrC7BC,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,OAAS,sBAAsB,aAAe,4BAA4B,QAAU,uBAAuB,IAAM,mBAAmB,OAAS,sBAAsB,SAAW,wBAAwB,qBAAuB,sC,oBCA5RD,EAAOC,QAAU,CAAC,aAAe,4BAA4B,OAAS,wB,yJCsFvDC,EAnFI,SAACC,GAuClB,IAvC6B,IAE3BT,EAKES,EALFT,SACAJ,EAIEa,EAJFb,WACAE,EAGEW,EAHFX,YACAY,EAEED,EAFFC,cAL0B,EAOxBD,EADFE,mBAN0B,MAMZ,GANY,EAQxBC,EAAaC,KAAKC,KAAKlB,EAAaI,GA8BpCe,EAAiB,GACZ3F,EAAI,EAAGA,GAAKwF,IAAcxF,EACjC2F,EAAe5E,KAAKf,GAxCM,MA0CwB4F,mBAAS,GA1CjC,mBA0CrBC,EA1CqB,KA0CDC,EA1CC,KA4CtBC,GAA0BF,EAAqB,GAAKN,EAAc,EAClES,EAA0BH,EAAqBN,EAE/CU,EAAeR,KAAKC,KAAKF,EAAaZ,GAE5C,OACE,yBAAKsB,UAAU,oBACb,yBAAKA,UAAS,UAAKC,IAAQC,oBAAb,cACXL,EAAyB,GACxB,4BAAQM,QAAS,kBAAMP,EAAsBD,EAAqB,KAAlE,QAIF,yBAAKK,UAAWC,IAAQG,cACrBX,EACEX,QACC,SAACuB,GAAD,OAAOA,GAAKR,GAA0BQ,GAAKP,KAE5C/D,KAAI,SAACuE,GACJ,OACE,yBACEC,IAAKD,EACLN,UAAWxB,IAAgB8B,EAAOL,IAAQO,OAAS,GACnDL,QAAS,kBAAMf,EAAckB,KAE5BA,OAKVX,EAAqBI,GACpB,4BAAQI,QAAS,kBAAMP,EAAsBD,EAAqB,KAAlE,W,yBCfKc,EA1DF,SAACtB,GACZ,OACE,oCACGA,EAAMlB,OACLkB,EAAMlB,MAAMlC,KAAI,SAACuE,GACf,OACE,yBAAKC,IAAKD,EAAK5C,GAAIsC,UAAWC,IAAQS,eACpC,kBAAC,IAAD,CAASC,GAAE,mBAAcL,EAAK5C,KAC5B,yBAAKsC,UAAWC,IAAQW,QACtB,yBACEC,IAAKP,EAAKQ,OAAOC,MAAQT,EAAKQ,OAAOC,MAAQC,IAC7CC,IAAKX,EAAKY,gBAKhB,yBAAKlB,UAAU,QACb,8BAAOM,EAAKa,OAGd,yBAAKnB,UAAWC,IAAQmB,SACtB,8BAAOd,EAAKY,cAGd,yBAAKlB,UAAWC,IAAQoB,cACrBf,EAAKgB,SACJ,4BACEC,SAAUpC,EAAMP,oBAAoB4C,MAClC,SAAC9D,GAAD,OAAQA,IAAO4C,EAAK5C,MAEtBsC,UAAS,UAAKC,IAAQwB,IAAb,YAAoBxB,IAAQyB,SAA5B,KACTvB,QAAS,WACPhB,EAAMwC,gBAAgBrB,KAN1B,YAYA,4BACEiB,SAAUpC,EAAMP,oBAAoB4C,MAClC,SAAC9D,GAAD,OAAQA,IAAO4C,EAAK5C,MAEtBsC,UAAS,UAAKC,IAAQwB,IAAb,YAAoBxB,IAAQ2B,QACrCzB,QAAS,WACPhB,EAAM0C,cAAcvB,KANxB,iBCAHwB,EAtCD,SAAC,GAYR,IAXL7D,EAWI,EAXJA,MACA2D,EAUI,EAVJA,OACAF,EASI,EATJA,SACAhD,EAQI,EARJA,SACAJ,EAOI,EAPJA,WACAE,EAMI,EANJA,YACAqD,EAKI,EALJA,cACAzC,EAII,EAJJA,cACAuC,EAGI,EAHJA,gBACA/C,EAEI,EAFJA,oBACAmD,EACI,EADJA,0BAEA,OACE,yBAAK/B,UAAU,SACb,kBAAC,EAAD,CACEtB,SAAUA,EACVJ,WAAYA,EACZE,YAAaA,EACba,YAAa,EACbD,cAAeA,IAEjB,kBAAC,EAAD,CACEnB,MAAOA,EACP2D,OAAQA,EACRF,SAAUA,EACVG,cAAeA,EACfF,gBAAiBA,EACjB/C,oBAAqBA,EACrBmD,0BAA2BA,IAE7B,yBAAK/B,UAAS,UAAKC,IAAQ+B,qBAAb,uBACZ,gD,iBCbFC,E,4MAKJ7C,cAAgB,SAACZ,GACf,EAAKW,MAAM+C,eAAe1D,GAC1B,EAAKW,MAAMgD,eAAe3D,EAAa,EAAKW,MAAMT,W,kEALlD0D,KAAKjD,MAAMgD,eAAeC,KAAKjD,MAAMX,YAAa4D,KAAKjD,MAAMT,Y,+BAQrD,IAAD,EAaH0D,KAAKjD,MAXPlB,EAFK,EAELA,MACA2D,EAHK,EAGLA,OACAlD,EAJK,EAILA,SACAgD,EALK,EAKLA,SACApD,EANK,EAMLA,WACAJ,EAPK,EAOLA,WACAM,EARK,EAQLA,YACAqD,EATK,EASLA,cACAF,EAVK,EAULA,gBACA/C,EAXK,EAWLA,oBACAmD,EAZK,EAYLA,0BAEF,OACE,oCACG7D,EAAa,kBAACmE,EAAA,EAAD,MAAgB,KAE9B,kBAAC,EAAD,CACEpE,MAAOA,EACP2D,OAAQA,EACRlD,SAAUA,EACVgD,SAAUA,EACVpD,WAAYA,EACZc,cAAegD,KAAKhD,cACpBZ,YAAaA,EACbqD,cAAeA,EACfF,gBAAiBA,EACjB/C,oBAAqBA,EACrBmD,0BAA2BA,S,GAvCTO,IAAMC,WAqEnBC,uBAvBS,SAAChF,GACvB,MAAO,CACLS,MAAOY,YAASrB,GAChBc,WAAYD,YAAcb,GAC1BgB,YAAaD,YAAef,GAC5BkB,SAAUD,YAAYjB,GACtBU,WAAYF,YAAcR,GAC1BoB,oBAAqBD,YAAuBnB,MAgBR,CACtCoE,WACAF,aACAQ,mBACAC,mBACAJ,8BACAF,kBACAF,qBAPaa,CAQZP","file":"static/js/6.5d2b6356.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from \"reselect\";\r\n\r\n\r\n/**\r\n * A selector is a function that accepts Redux state as an argument and returns data that is derived from that state. Selectors can provide performance optimizations to your application and can also help you encapsulate your global state tree.\r\n */\r\n//ProfileContainer\r\nexport const getUserId = state => {\r\n    return state.auth.id;\r\n};\r\nexport const getIsAuth = state => state.auth.isAuth;\r\nexport const getStatus = state => state.profile.status;\r\nexport const getIsFetching = state => state.users.isFetching;\r\nexport const getProfileData = state => state.profile.profileData;\r\n\r\n// export const getUsers = (state) => state.users.filter(u => true);\r\n\r\n\r\n//UserContainer\r\n\r\n\r\n////primitive selector - variant 1\r\n// export const getUsers = state => state.users.users;//not do re-render, becaiuse this selector return primitve value, BUT -> only called mpaStateToProps 👍\r\n\r\n////reference selector- variant 2\r\n// export const getUsers = state => state.users.users.filter(u => true);//mpaStateToProps -> render, mpaStateToProps -> render and etc ♾ 😨😨\r\n\r\nexport const getTotalCount = state => state.users.totalCount;\r\nexport const getCurrentPage = state => state.users.currentPage;\r\nexport const getPageSize = state => state.users.pageSize;\r\nexport const getFollowingInProgress = state => state.users.followingInProgress;\r\n\r\n\r\n////with reselect - good perfomance 👍\r\n\r\nconst getUsersSelector = state => state.users.users;\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userContaienr\":\"style_userContaienr__MII1v\",\"avatar\":\"style_avatar__6-AA3\",\"btnContainer\":\"style_btnContainer__3z6Qy\",\"message\":\"style_message__3iGlF\",\"btn\":\"style_btn__2Jifv\",\"follow\":\"style_follow__3RQtt\",\"unfollow\":\"style_unfollow__2VOEP\",\"btnShowMoreContaoner\":\"style_btnShowMoreContaoner__EH8QT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginContent\":\"style_paginContent__10UWf\",\"active\":\"style_active__2eIE8\"};","import React, { useState } from \"react\";\r\n\r\nimport classes from \"./style.module.css\";\r\n\r\nconst Pagination = (props) => {\r\n  const {\r\n    pageSize,\r\n    totalCount,\r\n    currentPage,\r\n    onActiveClick,\r\n    portionSize = 10,\r\n  } = props;\r\n  let totalPages = Math.ceil(totalCount / pageSize); //always math.ceil\r\n  /**\r\n   * how to find out how many page numbers to show ? \r\n        pageSize = section, items etc. when show in display -> pageSize !=  pageNumver\r\n   \r\n   * Math.ceil(4707 / 10) 471 page\r\n   * We must devide pages by portions -> 471/n -> ex: 471 / 10 = 47.1\r\n   \r\n   * in prev button and next button when we click we go on portion of page\r\n        * how to find what portion to show ? \r\n            * Formula -> (currentPagePortion - 1) * pageSize + 1  \r\n    * What is currentPagePortion. How it find ?\r\n    * to know which portion to show, (which range to show) we need to go through a cycle of all  < pageLimitArray >   and look at < currentPagePortion >. \r\n    \r\n    -----------Left\r\n    leftPortionCurrentPage for example -> currentPagePortion = 1\r\n        (1 - 1) * 10 + 1 = 1\r\n\r\n    -----------Right\r\n    RightPortionCurrentPage: for example -> currentPagePortion = 1\r\n\r\n    Ask again -> how find which range to show ? \r\n    //FOR EX : currentPagePortion = 1\r\n  (currentPagePortion - 1) * props.pageSize + 1;    //with this we filtring pageLimitArray - START  (1 - 1) * 10 + 1 = 1\r\n   currentPagePortion * props.pageSize;             //with this we filtring pageLimitArray - END    1 * 10 = 10\r\n   👍 CURRENT RANGE - 1 - 10\r\n\r\n\r\n    * \r\n   */\r\n  let pageLimitArray = [];\r\n  for (let i = 1; i <= totalPages; ++i) {\r\n    pageLimitArray.push(i);\r\n  }\r\n  const [currentPagePortion, setCurrentPagePortion] = useState(1);\r\n\r\n  const leftPortionCurrentPage = (currentPagePortion - 1) * portionSize + 1; //with this we filtring pageLimitArray - START\r\n  const rightPortionCurrentPage = currentPagePortion * portionSize; ////with this we filtring pageLimitArray - END\r\n\r\n  const portionCount = Math.ceil(totalPages / pageSize); //47 - for show  next button\r\n\r\n  return (\r\n    <div className=\"flexible jCenter\">\r\n      <div className={`${classes.paginationContainer} flexible`}>\r\n        {leftPortionCurrentPage > 1 && (\r\n          <button onClick={() => setCurrentPagePortion(currentPagePortion - 1)}>\r\n            Prev\r\n          </button>\r\n        )}\r\n        <div className={classes.paginContent}>\r\n          {pageLimitArray\r\n            .filter(\r\n              (p) => p >= leftPortionCurrentPage && p <= rightPortionCurrentPage\r\n            )\r\n            .map((item) => {\r\n              return (\r\n                <div\r\n                  key={item}\r\n                  className={currentPage === item ? classes.active : \"\"}\r\n                  onClick={() => onActiveClick(item)}\r\n                >\r\n                  {item}\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n        {currentPagePortion < portionCount && (\r\n          <button onClick={() => setCurrentPagePortion(currentPagePortion + 1)}>\r\n            Next\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./style.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport userPhoto from \"../../../assets/images/users.png\";\r\n\r\nconst User = (props) => {\r\n  return (\r\n    <>\r\n      {props.users &&\r\n        props.users.map((item) => {\r\n          return (\r\n            <div key={item.id} className={classes.userContaienr}>\r\n              <NavLink to={`/profile/${item.id}`}>\r\n                <div className={classes.avatar}>\r\n                  <img\r\n                    src={item.photos.small ? item.photos.small : userPhoto}\r\n                    alt={item.description}\r\n                  />\r\n                </div>\r\n              </NavLink>\r\n\r\n              <div className=\"name\">\r\n                <span>{item.name}</span>\r\n              </div>\r\n\r\n              <div className={classes.message}>\r\n                <span>{item.description}</span>\r\n              </div>\r\n\r\n              <div className={classes.btnContainer}>\r\n                {item.followed ? (\r\n                  <button\r\n                    disabled={props.followingInProgress.some(\r\n                      (id) => id === item.id\r\n                    )}\r\n                    className={`${classes.btn} ${classes.unfollow} `}\r\n                    onClick={() => {\r\n                      props.unfollowAsyncAC(item);\r\n                    }}\r\n                  >\r\n                    UNFOLLOW\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    disabled={props.followingInProgress.some(\r\n                      (id) => id === item.id\r\n                    )}\r\n                    className={`${classes.btn} ${classes.follow}`}\r\n                    onClick={() => {\r\n                      props.followAsyncAC(item);\r\n                    }}\r\n                  >\r\n                    FOLLOW\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./style.module.css\";\r\nimport Pagination from './../../Pagination/Paginator';\r\nimport User from './User';\r\n\r\nconst Users = ({\r\n  users,\r\n  follow,\r\n  unfollow,\r\n  pageSize,\r\n  totalCount,\r\n  currentPage,\r\n  followAsyncAC,\r\n  onActiveClick,\r\n  unfollowAsyncAC,\r\n  followingInProgress,\r\n  toggleFollowingInProgress,\r\n}) => {\r\n  return (\r\n    <div className=\"Users\">\r\n      <Pagination\r\n        pageSize={pageSize}\r\n        totalCount={totalCount}\r\n        currentPage={currentPage}\r\n        portionSize={7}\r\n        onActiveClick={onActiveClick}\r\n      />\r\n      <User\r\n        users={users}\r\n        follow={follow}\r\n        unfollow={unfollow}\r\n        followAsyncAC={followAsyncAC}\r\n        unfollowAsyncAC={unfollowAsyncAC}\r\n        followingInProgress={followingInProgress}\r\n        toggleFollowingInProgress={toggleFollowingInProgress}\r\n      />\r\n      <div className={`${classes.btnShowMoreContaoner}  flexible jCenter`}>\r\n        <button>SHOW MORE</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import {\r\n  follow,\r\n  unfollow,\r\n  followAsyncAC,\r\n  setCurrentPage,\r\n  unfollowAsyncAC,\r\n  getUsersAsncAC,\r\n  toggleFollowingInProgress,\r\n} from \"../../../redux/userReducer\";\r\n\r\nimport Preloader from \"./../Preloader/Preloader\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUsers,\r\n  getPageSize,\r\n  getIsFetching,\r\n  getTotalCount,\r\n  getCurrentPage,\r\n  getFollowingInProgress,\r\n} from \"./../../../redux/userSelectors\";\r\n\r\n// window.usrc = [];\r\n\r\nclass UserContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getUsersAsncAC(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\n  onActiveClick = (currentPage) => {\r\n    this.props.setCurrentPage(currentPage);\r\n    this.props.getUsersAsncAC(currentPage, this.props.pageSize);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      users,\r\n      follow,\r\n      pageSize,\r\n      unfollow,\r\n      totalCount,\r\n      isFetching,\r\n      currentPage,\r\n      followAsyncAC,\r\n      unfollowAsyncAC,\r\n      followingInProgress,\r\n      toggleFollowingInProgress,\r\n    } = this.props;\r\n    return (\r\n      <>\r\n        {isFetching ? <Preloader /> : null}\r\n\r\n        <Users\r\n          users={users}\r\n          follow={follow}\r\n          pageSize={pageSize}\r\n          unfollow={unfollow}\r\n          totalCount={totalCount}\r\n          onActiveClick={this.onActiveClick}\r\n          currentPage={currentPage}\r\n          followAsyncAC={followAsyncAC}\r\n          unfollowAsyncAC={unfollowAsyncAC}\r\n          followingInProgress={followingInProgress}\r\n          toggleFollowingInProgress={toggleFollowingInProgress}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    users: getUsers(state),\r\n    totalCount: getTotalCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    pageSize: getPageSize(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     follow: (id) => dispatch(followAC(id)),\r\n//     unfollow: (id) => dispatch(unfollowAC(id)),\r\n//     setUsers: (users) => dispatch(setUsersAC(users)),\r\n//     setTotalCount: (totalCount) => dispatch(setTotalCountAC(totalCount)),\r\n//     setCurrentPage: (currentPage) => dispatch(setCurrentPageAC(currentPage)),\r\n//     setIsFetching : (isFetching) => dispatch(setIsFetchingAC(isFetching))\r\n//   };\r\n// };\r\n// export default connect(mapStateToProps, mapDispatchToProps)(UserContainer);\r\n\r\nexport default connect(mapStateToProps, {\r\n  follow,\r\n  unfollow,\r\n  setCurrentPage,\r\n  getUsersAsncAC,\r\n  toggleFollowingInProgress,\r\n  followAsyncAC,\r\n  unfollowAsyncAC,\r\n})(UserContainer);\r\n"],"sourceRoot":""}