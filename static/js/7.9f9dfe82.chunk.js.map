{"version":3,"sources":["common/FormControl/FormControl.jsx","common/FormControl/style.module.css","utils/validators.js","common/FormControl/Input/Inpuit.jsx","common/components/Login/LoginForm.jsx","common/components/Login/Login.jsx"],"names":["createField","component","validates","type","name","placeholder","id","validate","FormControl","meta","children","input","error","isCheck","touched","className","styles","container","warningContent","module","exports","required","value","undefined","maxLength","max","length","minLengthPassowrd","email","test","Input","props","restProps","minLengthPassw","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","htmlFor","commonErrorContainer","connect","state","isAuth","auth","loginThunkCreator","to","values","password","rememberMe"],"mappings":"kMAqBaA,EAAc,SAACC,GAAiE,IAAtDC,EAAqD,uDAAzC,GAAIC,EAAqC,uDAA9B,GAAIC,EAA0B,uCAApBC,EAAoB,uCAAPC,EAAO,uCAC1F,OACE,kBAAC,IAAD,CACEA,GAAIA,EACJH,KAAMA,EACNC,KAAMA,EACNH,UAAWA,EACXM,SAAUL,EACVG,YAAaA,KAIJG,IA5BK,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAaC,GAA6B,EAApCC,MAAoC,EAA7BD,UAC1BE,GADuD,2CACpCH,EAAnBG,OACFC,EADqBJ,EAAZK,SACYF,EAC3B,OACE,yBAAKG,UAAWC,IAAOC,WACrB,yBACEF,UAAS,UAAKF,EAAUG,IAAOE,eAAiB,GAAvC,uBAGRR,GAEFG,GAAW,8BAAOD,M,oBCfzBO,EAAOC,QAAU,CAAC,UAAY,yBAAyB,eAAiB,8BAA8B,qBAAuB,sC,iCCD7H,wIACO,IAAMC,EAAW,SAACC,GAErB,OAAOA,OAAQC,EAAY,qBAMlBC,EAAY,SAACC,GAAD,OAAS,SAACH,GAC/B,OAAOA,GAASA,EAAMI,OAASD,EAAxB,kBAAyCA,EAAzC,4BAAoEF,IAGlEI,EAAoB,SAACF,GAAD,OAAS,SAACH,GACvC,OAAOA,GAASA,EAAMI,OAASD,EAAxB,uCAA8DA,EAA9D,oBAAiFF,IAI/EK,EAAQ,SAAAN,GAAK,OAAIA,IAAU,4CAA4CO,KAAKP,GAAS,6BAA0BC,I,uFCP7GO,EARD,SAACC,GAAW,IAChBpB,EAAwBoB,EAAxBpB,MAAUqB,EADK,YACSD,EADT,WAEvB,OACE,kBAACvB,EAAA,EAAgBuB,EACf,2CAAWpB,EAAWqB,M,2BCItBC,EAAiBN,YAAkB,GA4C1BO,EAJQC,YAAU,CAC/BC,KAAM,SADeD,EAvCL,SAACJ,GACjB,OACE,oCACE,qCACA,yBAAKhB,UAAU,aACb,0BAAMsB,SAAUN,EAAMO,cACpB,6BACGtC,YAAY8B,EAAO,CAACT,IAAUO,KAAQ,OAAQ,QAAS,UAE1D,6BACG5B,YACC8B,EACA,CAACT,IAAUY,GACX,WACA,WACA,aAGJ,yBAAKlB,UAAU,YACZf,YACC8B,EACA,GACA,WACA,aACA,WACA,OAEF,2BAAOS,QAAQ,OAAf,aAEF,4CAIHR,EAAMnB,OACL,yBAAKG,UAAWC,IAAOwB,sBAAuBT,EAAMnB,W,uBCtB7C6B,uBAFS,SAACC,GAAD,MAAY,CAAEC,OAAQD,EAAME,KAAKD,UAEjB,CAAEE,uBAA3BJ,EAlBD,SAACV,GAKb,OAAIA,EAAMY,OACD,kBAAC,IAAD,CAAUG,GAAG,aAGpB,yBAAK/B,UAAU,SAGb,kBAAC,EAAD,CAAgBsB,SAXL,SAACU,GAAY,IACpBnB,EAAgCmB,EAAhCnB,MAAOoB,EAAyBD,EAAzBC,SAAUC,EAAeF,EAAfE,WACvBlB,EAAMc,kBAAkBjB,EAAOoB,EAAUC","file":"static/js/7.9f9dfe82.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport styles from \"./style.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nconst FormControl = ({ meta, input, children, ...restProps }) => {\r\n  const { error, touched } = meta;\r\n  const isCheck = touched && error;\r\n  return (\r\n    <div className={styles.container}>\r\n      <div\r\n        className={`${isCheck ? styles.warningContent : \"\"} flexible vertical`}\r\n      >\r\n        {/* <textarea {...input} {...restProps}></textarea> */}\r\n        {children}\r\n      </div>\r\n      {isCheck && <span>{error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const createField = (component, validates = [], type = \"\", name, placeholder, id) => {\r\n  return (\r\n    <Field\r\n      id={id}\r\n      type={type}\r\n      name={name}\r\n      component={component}\r\n      validate={validates}\r\n      placeholder={placeholder}\r\n    />\r\n  );\r\n};\r\nexport default FormControl;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__2Pbsw\",\"warningContent\":\"style_warningContent__2DvKH\",\"commonErrorContainer\":\"style_commonErrorContainer__zYqpi\"};","//check if the input field is empty not add\r\nexport const required = (value) => {\r\n    // return value ? false : true ;//working\r\n    return value ? undefined : \"Field is required\";\r\n    //true - not add -> \" \", 1, -5 every if true not add\r\n    //false - added ->  return value; //added  because come undefined\r\n}\r\n\r\n////validator creator for own parametr\r\nexport const maxLength = (max) => (value) => {\r\n    return value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n}\r\n\r\nexport const minLengthPassowrd = (max) => (value) => {\r\n    return value && value.length < max ? `Enter a password longer than ${max} characters` : undefined;\r\n}\r\n\r\n\r\nexport const email = value => value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ? 'Invalid email address' : undefined;\r\n","import React from \"react\";\r\nimport FormControl from \"./../FormControl\";\r\n\r\nconst Input = (props) => {\r\n  const { input, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport Input from \"./../../FormControl/Input/Inpuit\";\r\nimport {\r\n  required,\r\n  minLengthPassowrd,\r\n  email,\r\n} from \"./../../../utils/validators\";\r\nimport styles from \"../../FormControl/style.module.css\";\r\nimport { createField } from \"./../../FormControl/FormControl\";\r\n\r\nconst minLengthPassw = minLengthPassowrd(8);\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <>\r\n      <h2>Login</h2>\r\n      <div className=\"LoginForm\">\r\n        <form onSubmit={props.handleSubmit}>\r\n          <div>\r\n            {createField(Input, [required, email], \"text\", \"email\", \"Email\")}\r\n          </div>\r\n          <div>\r\n            {createField(\r\n              Input,\r\n              [required, minLengthPassw],\r\n              \"password\",\r\n              \"password\",\r\n              \"Password\"\r\n            )}\r\n          </div>\r\n          <div className=\"flexible\">\r\n            {createField(\r\n              Input,\r\n              [],\r\n              \"checkbox\",\r\n              \"rememberMe\",\r\n              \"Password\",\r\n              \"rem\"\r\n            )}\r\n            <label htmlFor=\"rem\">Remember</label>\r\n          </div>\r\n          <button>Submit</button>\r\n        </form>\r\n      </div>\r\n\r\n      {props.error && (\r\n        <div className={styles.commonErrorContainer}>{props.error}</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst LoginReduxForm = reduxForm({\r\n  form: \"login\",\r\n})(LoginForm);\r\n\r\nexport default LoginReduxForm;\r\n","import React from \"react\";\r\nimport LoginReduxForm from \"./LoginForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginThunkCreator } from \"../../../redux/authReducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  const submit = (values) => {\r\n    let { email, password, rememberMe } = values;\r\n    props.loginThunkCreator(email, password, rememberMe);\r\n  };\r\n  if (props.isAuth) {\r\n    return <Redirect to=\"/profile\" />;\r\n  }\r\n  return (\r\n    <div className=\"Login\">\r\n      {/* we must pass onSubmit props for work */}\r\n      {/* <LoginReduxForm on_submit={submit} /> */}\r\n      <LoginReduxForm onSubmit={submit} />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({ isAuth: state.auth.isAuth });\r\n\r\nexport default connect(mapStateToProps, { loginThunkCreator })(Login);\r\n"],"sourceRoot":""}